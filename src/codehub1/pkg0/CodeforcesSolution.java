/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codehub1.pkg0;

/**
 *
 * @author Aaman
 */
public class CodeforcesSolution extends javax.swing.JFrame {

    /**
     * Creates new form CodeforcesSolution
     */
    public CodeforcesSolution() {
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        ilyaNQueries = new javax.swing.JButton();
        antonNClasses = new javax.swing.JButton();
        dijkstra = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Codeforces Solution");

        output.setEditable(false);
        output.setBackground(new java.awt.Color(0, 0, 0));
        output.setColumns(20);
        output.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        output.setForeground(new java.awt.Color(255, 255, 255));
        output.setRows(5);
        output.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(output);

        ilyaNQueries.setBackground(new java.awt.Color(0, 153, 153));
        ilyaNQueries.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ilyaNQueries.setForeground(new java.awt.Color(255, 255, 255));
        ilyaNQueries.setText("Ilya and Queries");
        ilyaNQueries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ilyaNQueriesActionPerformed(evt);
            }
        });

        antonNClasses.setBackground(new java.awt.Color(0, 153, 153));
        antonNClasses.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        antonNClasses.setForeground(new java.awt.Color(255, 255, 255));
        antonNClasses.setText("Anton and Classes");
        antonNClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antonNClassesActionPerformed(evt);
            }
        });

        dijkstra.setBackground(new java.awt.Color(0, 153, 153));
        dijkstra.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dijkstra.setForeground(new java.awt.Color(255, 255, 255));
        dijkstra.setText("Dijkstra?");
        dijkstra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dijkstraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ilyaNQueries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(antonNClasses, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(dijkstra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 598, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ilyaNQueries, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(antonNClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new FrontPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dijkstraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dijkstraActionPerformed
        // TODO add your handling code here:
        output.setText("#include<bits/stdc++.h>\n" +
"#define pii pair<int,int>\n" +
"using namespace std;\n" +
"const int mx = 1e5+5;\n" +
"vector < pii > cost[mx];\n" +
"int vis[mx],par[mx],dist[mx],N,E;\n" +
"bool dijkstra(int st,int en)\n" +
"{\n" +
"    priority_queue< pii,vector<pii>,greater<pii> > pq;\n" +
"    for(int i=1;i<=N;i++)\n" +
"        dist[i] = INFINITY;\n" +
"    pq.push(pii(0,st));\n" +
"    par[st] = -1;\n" +
"    dist[st] = 0;\n" +
"    while(!pq.empty())\n" +
"    {\n" +
"        int h = pq.top().second;\n" +
"        pq.pop();\n" +
"        if(h==en)\n" +
"            return true;\n" +
"        vis[h] = 1;\n" +
"        for(auto i : cost[h])\n" +
"        {\n" +
"            int w = i.second , v = i.first;\n" +
"            if(!vis[v] && dist[h]+w<dist[v])\n" +
"            {\n" +
"                dist[v] = dist[h]+w;\n" +
"                pq.push(pii(dist[v],v));\n" +
"                par[v] = h;\n" +
"            }\n" +
"        }\n" +
"    }\n" +
"    return false;\n" +
"}\n" +
"int main()\n" +
"{\n" +
"    int u,v,w;\n" +
"    cin >> N >> E;\n" +
"    for(int i=0;i<E;i++)\n" +
"    {\n" +
"        cin >> u >> v >> w;\n" +
"        cost[u].push_back(pii(v,w));\n" +
"        cost[v].push_back(pii(u,w));\n" +
"    }\n" +
"    if(dijkstra(1,N))\n" +
"    {\n" +
"        vector < int > path;\n" +
"        int i = N;\n" +
"        while(i!=-1)\n" +
"        {\n" +
"            path.push_back(i);\n" +
"            i = par[i];\n" +
"        }\n" +
"        for(int i=path.size()-1;i>=0;i--)\n" +
"            cout << path[i] << \" \";\n" +
"        cout << endl;\n" +
"    }\n" +
"    else\n" +
"        cout << -1 << endl;\n" +
"}");
    }//GEN-LAST:event_dijkstraActionPerformed

    private void ilyaNQueriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ilyaNQueriesActionPerformed
        // TODO add your handling code here:
        output.setText("#include<bits/stdc++.h>\n" +
"using namespace std;\n" +
"int main()\n" +
"{\n" +
"    ios_base::sync_with_stdio(false);cin.tie(NULL);\n" +
"    string s;\n" +
"    cin >> s;\n" +
"    int len = s.size() , n , l , r;\n" +
"    long long dp[len]={0};\n" +
"    for(int i=1;i<len;i++)\n" +
"    {\n" +
"        if(s[i]==s[i-1])\n" +
"            dp[i]++;\n" +
"        dp[i] += dp[i-1];\n" +
"    }\n" +
"    cin >> n;\n" +
"    for(int i=0;i<n;i++)\n" +
"    {\n" +
"        cin >> l >> r;\n" +
"        cout << dp[r-1]-dp[l-1] << endl;\n" +
"    }\n" +
"}");
    }//GEN-LAST:event_ilyaNQueriesActionPerformed

    private void antonNClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antonNClassesActionPerformed
        // TODO add your handling code here:
        output.setText("#include<bits/stdc++.h>\n" +
"using namespace std;\n" +
"int main()\n" +
"{\n" +
"    ios_base::sync_with_stdio(false);cin.tie(NULL);\n" +
"    int n,m,l,r;\n" +
"    cin >> n;\n" +
"    int mx1 = INT_MIN , mx2 = INT_MIN;\n" +
"    int mn1 = INT_MAX , mn2 = INT_MAX;\n" +
"    for(int i=0;i<n;i++)\n" +
"    {\n" +
"        cin >> l >> r;\n" +
"        mx1 = max(mx1,l);\n" +
"        mn1 = min(mn1,r);\n" +
"    }\n" +
"    cin >> m;\n" +
"    for(int i=0;i<m;i++)\n" +
"    {\n" +
"        cin >> l >> r;\n" +
"        mx2 = max(mx2,l);\n" +
"        mn2 = min(mn2,r);\n" +
"    }\n" +
"    int ans = max(mx2-mn1,mx1-mn2);\n" +
"    if(ans>=0)\n" +
"        cout << ans << endl;\n" +
"    else\n" +
"        cout << 0 << endl;\n" +
"}");
    }//GEN-LAST:event_antonNClassesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CodeforcesSolution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CodeforcesSolution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CodeforcesSolution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CodeforcesSolution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CodeforcesSolution().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton antonNClasses;
    private javax.swing.JButton dijkstra;
    private javax.swing.JButton ilyaNQueries;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
}
