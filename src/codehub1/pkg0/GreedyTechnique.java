/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codehub1.pkg0;

/**
 *
 * @author Aaman
 */
public class GreedyTechnique extends javax.swing.JFrame {

    /**
     * Creates new form GreedyTechnique
     */
    public GreedyTechnique() {
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        kruskal = new javax.swing.JButton();
        fracKnap = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Greedy Techniques");

        output.setEditable(false);
        output.setBackground(new java.awt.Color(0, 0, 0));
        output.setColumns(20);
        output.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        output.setForeground(new java.awt.Color(255, 255, 255));
        output.setRows(5);
        output.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(output);

        kruskal.setBackground(new java.awt.Color(204, 51, 0));
        kruskal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        kruskal.setForeground(new java.awt.Color(255, 255, 255));
        kruskal.setText("Kruskal");
        kruskal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kruskalActionPerformed(evt);
            }
        });

        fracKnap.setBackground(new java.awt.Color(204, 51, 0));
        fracKnap.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fracKnap.setForeground(new java.awt.Color(255, 255, 255));
        fracKnap.setText("Fractional KnapSack");
        fracKnap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fracKnapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kruskal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fracKnap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fracKnap, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kruskal)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new FrontPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fracKnapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fracKnapActionPerformed
        // TODO add your handling code here:
        output.setText("#include<bits/stdc++.h>\n" +
"#define pii pair<int,int>\n" +
"using namespace std;\n" +
"vector < pii > v;\n" +
"bool cmp(pii a,pii b)\n" +
"{\n" +
"    return a.second*b.first > b.second*a.first;\n" +
"}\n" +
"int main()\n" +
"{\n" +
"    int N,W,weight,price,temp,ans = 0;\n" +
"    cin >> N >> W;\n" +
"    for(int i=0;i<N;i++)\n" +
"    {\n" +
"        cin >> weight >> price;\n" +
"        v.push_back(pii(weight,price));\n" +
"    }\n" +
"    sort(v.begin(),v.end(),cmp);\n" +
"    for(int i=0;i<N;i++)\n" +
"    {\n" +
"        temp = min(W,v[i].first);\n" +
"        W -= temp;\n" +
"        ans += temp*v[i].second;\n" +
"    }\n" +
"    cout << \"Maximum Cost : \" << ans << endl;\n" +
"}");
    }//GEN-LAST:event_fracKnapActionPerformed

    private void kruskalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kruskalActionPerformed
        // TODO add your handling code here:
        output.setText("#include<bits/stdc++.h>\n" +
"#define pii pair<int,int>\n" +
"using namespace std;\n" +
"const int mx = 1005;\n" +
"struct edge\n" +
"{\n" +
"    int u,v,w;\n" +
" \n" +
"};\n" +
"vector < edge > adj;\n" +
"int N,E,par[mx];\n" +
"bool cmp(edge a,edge b)\n" +
"{\n" +
"    return a.w < b.w;\n" +
"}\n" +
"int Find(int n)\n" +
"{\n" +
"    if(par[n]==n)\n" +
"        return n;\n" +
"    return par[n] = Find(par[n]);\n" +
"}\n" +
"int kruskal()\n" +
"{\n" +
"    int ans = 0 , cnt = 0 , uu , vv;\n" +
"    for(int i=1;i<=N;i++)\n" +
"        par[i] = i;\n" +
"    for(int i=0; i<E; i++)\n" +
"    {\n" +
"        uu = Find(adj[i].u) , vv = Find(adj[i].v);\n" +
"        if(uu!=vv)\n" +
"        {\n" +
"            par[uu] = vv;\n" +
"            cnt++;\n" +
"            ans += adj[i].w;\n" +
"            if(cnt==N-1)\n" +
"                break;\n" +
"        }\n" +
"    }\n" +
"    return ans;\n" +
"}\n" +
"int main()\n" +
"{\n" +
"    int uu,vv,ww;\n" +
"    edge get;\n" +
"    cin >> N >> E;\n" +
"    for(int i=0; i<E; i++)\n" +
"    {\n" +
"        cin >> uu >> vv >> ww;\n" +
"        get.u = uu;\n" +
"        get.v = vv;\n" +
"        get.w = ww;\n" +
"        adj.push_back(get);\n" +
"    }\n" +
"    sort(adj.begin(),adj.end(),cmp);\n" +
"    cout << kruskal() << endl;\n" +
"}");
    }//GEN-LAST:event_kruskalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GreedyTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GreedyTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GreedyTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GreedyTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GreedyTechnique().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fracKnap;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton kruskal;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
}
